#!/bin/bash
#============================================================================
# Title       : qdda-acl
# Description : Set extended acls for disks via udev rules
# Author      : Bart Sjerps <bart@outrun.nl>
# License     : GPLv3+
# ---------------------------------------------------------------------------
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License at <http://www.gnu.org/licenses/> for
# more details.
# ---------------------------------------------------------------------------
# Revision history:
# 2017-11-08 : Created
# ---------------------------------------------------------------------------
#============================================================================
# Configuration parameters:
# ---------------------------------------------------------------------------

GROUP=qdda

#============================================================================
# Initialization - Logging - Etc.
# ---------------------------------------------------------------------------

die() { echo "$(basename $0) error: $@" >&2 ; exit ${rc:-99} ; }

#============================================================================
# Usage:
# ---------------------------------------------------------------------------
usage() {
  cat <<- EOF
	$(basename $0) <dev>
	
	If group $GROUP exists, sets an ACL read-only permission on <dev> for
	the group.
	
	If $GROUP does not exist, all extended ACL's are removed.
	
	This allows the qdda executable to run as non-root user and still 
	get read-only access to all disks. The non-root user must be a member
	of $GROUP. Normal (non-ACL) UNIX ownerships/permissions are preserved.
	
	Users usually don't have to run this script as it's called by udev
	rules.
	
	EOF
}
#============================================================================
# Main section - parsing options etc
# ---------------------------------------------------------------------------
while getopts ":h" OPT; do
  case "$OPT" in
   \?|h) usage ; exit ;;
  esac
done
shift $(expr $OPTIND - 1)

test -b $1 || exit

if grep -q ^$GROUP: /etc/group; then
  /usr/bin/setfacl -m g:$GROUP:r $1
else
  /usr/bin/setfacl -b $1
fi
